name: "Upstream Sync"

on:
  schedule:
    - cron: "0 */1 * * *"

  workflow_dispatch:

jobs:
  sync_latest_from_upstream:
    runs-on: ubuntu-latest
    name: Sync latest commits from upstream repo
    permissions:
      contents: write

    steps:
      # REQUIRED step
      # Step 1: run a standard checkout action, provided by github
      - name: Checkout target repo and merge
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Merge upstream changes
        run: |
          git config --global user.email "git[bot]@github.com"
          git config --global user.name "git[bot]"
          git remote add upstream https://github.com/OpenListTeam/OpenList.git
          git fetch upstream
          git merge --no-edit upstream/main
          git push

  sync_tags_from_upstream:
    needs: [sync_latest_from_upstream]
    runs-on: ubuntu-latest
    name: Sync latest tag from upstream repo
    permissions:
      contents: write

    steps:
      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Sync latest tag from upstream
        run: |
          git remote add upstream https://github.com/OpenListTeam/OpenList.git
          git fetch upstream --tags

          # 获取上游仓库的最新tag
          LATEST_UPSTREAM_TAG=$(git ls-remote --tags upstream | grep -v '\^{}' | cut -d'/' -f3 | sort -V | tail -1)

          if [ -z "$LATEST_UPSTREAM_TAG" ]; then
            echo "No tags found in upstream repository"
            exit 0
          fi

          echo "Latest upstream tag: $LATEST_UPSTREAM_TAG"

          # 检查当前仓库是否已经有这个tag
          if git ls-remote --tags upstream | grep -q "refs/tags/$LATEST_UPSTREAM_TAG$"; then
            echo "Tag $LATEST_UPSTREAM_TAG already exists in current repository"
            exit 0
          fi

          # 获取tag对应的commit hash
          TAG_COMMIT=$(git ls-remote upstream "refs/tags/$LATEST_UPSTREAM_TAG" | cut -f1)

          # 检查当前仓库是否有这个commit
          if git cat-file -e "$TAG_COMMIT" 2>/dev/null; then
            # 创建新tag
            git tag "$LATEST_UPSTREAM_TAG" "$TAG_COMMIT"
            git push origin "$LATEST_UPSTREAM_TAG"
            echo "Successfully created and pushed tag: $LATEST_UPSTREAM_TAG"
          else
            echo "Commit $TAG_COMMIT for tag $LATEST_UPSTREAM_TAG not found in current repository"
            echo "Tag will be created after the next commit sync"
            exit 0
          fi
